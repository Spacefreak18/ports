# description	: Collection of modular and reusable compiler and toolchain technologies
# depends	: cmake libffi python3 ninja libxml2

name=llvm
version=15.0.0
release=1
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/llvm-$version.src.tar.xz
https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/cmake-$version.src.tar.xz
llvm-config.h"

build() {
	cd $name-$version.src

	cp $SRC/cmake-$version.src/Modules/* cmake/modules/ 

	cmake -B build -G Ninja \
		-D CMAKE_INSTALL_PREFIX=/usr \
		-D CMAKE_BUILD_TYPE=Release \
		-D CMAKE_C_FLAGS_RELEASE="$CFLAGS" \
		-D CMAKE_CXX_FLAGS_RELEASE="$CXXFLAGS" \
		-D LLVM_TARGETS_TO_BUILD='X86;AMDGPU;BPF;NVPTX;WebAssembly' \
		-D LLVM_BINUTILS_INCDIR=/usr/include \
		-D LLVM_BUILD_LLVM_DYLIB=ON \
		-D LLVM_LINK_LLVM_DYLIB=ON \
		-D LLVM_INCLUDE_EXAMPLES=OFF \
		-D LLVM_INCLUDE_TESTS=OFF \
		-D LLVM_ENABLE_FFI=ON \
		-D LLVM_ENABLE_RTTI=ON \
		-D LLVM_ENABLE_OCAMLDOC=OFF \
		-D LLVM_INSTALL_UTILS=ON \
		-D LLVM_ENABLE_LIBCXX=OFF \
		-D LLVM_ENABLE_LLD=ON \
		-D LLVM_OPTIMIZED_TABLEGEN=ON \
		-D LLVM_INCLUDE_BENCHMARKS=OFF \
		-Wno-dev

	cmake --build build
	DESTDIR=$PKG cmake --install build


	# multilib stub
	mv $PKG/usr/include/llvm/Config/llvm-config.h \
	   $PKG/usr/include/llvm/Config/llvm-config-64.h
	cp $SRC/llvm-config.h \
	   $PKG/usr/include/llvm/Config/llvm-config.h	
}
